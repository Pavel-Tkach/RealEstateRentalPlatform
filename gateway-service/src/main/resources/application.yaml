spring:
  application:
    name: gateway-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/RealEstateRentalPlatform/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://keycloak:8080/realms/RealEstateRentalPlatform
        registration:
          keycloak:
            provider: keycloak
            client-id: gateway-security
            client-secret: jxQswsT4s4b2AAESaJ0KEHnKPAofTWLw
            authorization-grant-type: authorization_code
            scope: openid

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: property-get-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=GET

        - id: property-get-by-id-route
          uri: lb://property-service
          predicates:
            - Path=/properties/{propertyId}
            - Method=GET

        - id: property-post-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-put-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=PUT
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-delete-route
          uri: lb://property-service
          predicates:
            - Path=/properties/{propertyId}
            - Method=DELETE
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-get-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-get-by-id-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-post-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-payment-post-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}/payments
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-delete-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}
            - Method=DELETE
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: user-get-route
          uri: lb://user-service
          predicates:
            - Path=/users
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: ADMIN

        - id: user-get-by-email-route
          uri: lb://user-service
          predicates:
            - Path=/users/search
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: ADMIN

        - id: user-put-route
          uri: lb://user-service
          predicates:
            - Path=/users
            - Method=PUT
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: user-delete-route
          uri: lb://user-service
          predicates:
            - Path=/users/{userId}
            - Method=DELETE
          filters:
            - name: AuthFilter
              args:
                role: ADMIN

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8083/eureka/}

logging:
  level:
    org.springframework.security: TRACE

jwt:
  secret-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA2ToMPKAchyEjqTyoVRDsjtmyzn9L5jZ4AWfbzXcn2FmdGs/I0p/QdL59M1u6gEoXA0hVPlryqG1IuLNjK8iimN1PCbwGb3klRm+ovLODP+9rn2oj3uaGHNzabKQIAdomr4ATb7Y50HuC6U1h8MyQJZmeEsn3DvG3spM9ECkxQ2nfx+CFXejyKFjMsbW7qKePVPxJsDtRWipn1grZBIk+gaPQdHkKbphceLNnXta0PJCAaq6jqkrxX8YGf+joO8beEP9LV7LMLwJQ84GmKUMEvJI+kBAypWz/s8R+CIgykRFiZ8m9QdzZWehfWK3pXCu6IYxy5MeuwRTwnH4YmfXQ1wIDAQAB

management:
  endpoints:
    web:
      exposure:
        include:
          - health
          - prometheus
server:
  port: 8085
