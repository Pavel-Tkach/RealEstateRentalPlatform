spring:
  application:
    name: gateway-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://localhost:10000/realms/RealEstateRentalPlatform/protocol/openid-connect/certs
      client:
        provider:
          keycloak:
            issuer-uri: http://localhost:10000/realms/RealEstateRentalPlatform
        registration:
          keycloak:
            provider: keycloak
            client-id: gateway-security
            client-secret: jxQswsT4s4b2AAESaJ0KEHnKPAofTWLw
            authorization-grant-type: authorization_code
            scope: openid

  cloud:
    gateway:
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true
      routes:
        - id: property-get-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-get-by-id-route
          uri: lb://property-service
          predicates:
            - Path=/properties/{propertyId}
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-post-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-put-route
          uri: lb://property-service
          predicates:
            - Path=/properties
            - Method=PUT
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: property-delete-route
          uri: lb://property-service
          predicates:
            - Path=/properties/{propertyId}
            - Method=DELETE
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-get-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-get-by-id-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}
            - Method=GET
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-post-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-payment-post-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}/payments
            - Method=POST
          filters:
            - name: AuthFilter
              args:
                role: USER

        - id: booking-delete-route
          uri: lb://booking-service
          predicates:
            - Path=/bookings/{bookingId}
            - Method=DELETE
          filters:
            - name: AuthFilter
              args:
                role: USER

eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_DEFAULT_ZONE:http://localhost:8083/eureka/}

server:
  port: 8084
logging:
  level:
    org.springframework.security: TRACE

jwt:
  secret-key: MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAp7zvQSzEGpGcaMmkIzicZpy7FUtakiETV2Pg9ZsosJX9GBH140Pbj+TB+K/mAjWRRf6Wz24iC5Yh2wrchLqYzn5ooajn5moyLdJh+MKNghkbZkIcPEDwGJfkIAhmI76UrrMOvQj9KJ30OE1Xcj0c+PjLJG9EMifJzVuYoM8cpWJirtg136hR3kyiw8S7KqJlWCNHPoDJj7dk8lNabgokjdIfEbhxVQVOGFOD2XmZEYmfvGzJVdVYnzpmNVAbh7plXOtuo4vvq5YOfjDBlQhGww2uHWboZ9d+guSiVORw0Q6NnvfxUqOykRSfLvahiInvp2nJZJx78M0VTYZbMkwv8QIDAQAB

